<?xml version="1.0" encoding="UTF-8"?>
<project default="main">
        <property file="override.properties"/>
	<property name="build.classes" value="bin" />
	<property name="build.lib" value="build" />
	<property name="java.dir" value="." />
	<property name="name" value="Freereader" />
	<property name="freenet-cvs-snapshot.location" location="../fred/dist/freenet.jar"/>
	<property name="source-version" value="1.6"/>
	<property name="target-version" value="1.6"/>
	<property name="JDOM.location" location="lib/jdom.jar"/>
	<property name="JarJar.location" location="lib/jarjar-1.0.jar"/>
	<property name="Jaxen.location" location="lib/jaxen-1.1.1.jar"/>
	<property name="ROME.location" location="lib/rome-1.0.jar"/>
	
	<property name="src" value="src"/>
	<property name="version.src" value="plugins/Freereader/Version.java" />
	<property name="version.build" value="plugins/Freereader/Version.class" />
	<available file="${src}/${version.src}" property="version.present" />

	<path id="classpath">
		<pathelement location="." />
	</path>

	<target name="main" depends="compress" description="Main target">
		<echo>Building the .jar file.</echo>
	</target>

	<!-- Originally from Library's build script -->
	<exec executable="git"
		failifexecutionfails="false"
		errorProperty="git.errror"
		outputproperty="git.describe"
		resultproperty="git.result">
		<arg value="describe" />
		<arg value="--always" />
		<arg value="--abbrev=7" />
		<arg value="--dirty" />
	</exec>

	<condition property="git.revision" value="${git.describe}" else="@unknown@">
		<and>
			<equals arg1="${git.result}" arg2="0" />
			<isset property="git.describe" />
		</and>
	</condition>

	<target name="setver" if="version.present">
		<!-- Update the Version.java file in ${build}-->
		<copy file="${src}/${version.src}" tofile="${build.classes}/${version.src}" overwrite="true" />
		<replace file="${build.classes}/${version.src}">
			<replacefilter token="@custom@" value="${git.revision}"/>
		</replace>
		<javac srcdir="${build.classes}" includes="${version.src}" destdir="${build.classes}" debug="on" optimize="on" source="${source-version}" target="${target-version}" includeantruntime="false"/>
		<echo message="Updated build version to ${git.revision} in ${build.classes}/${version.src}"/>
	</target>

	<target name="compile" depends="build-dep,setver" description="Compilation target">
		<javac srcdir="${java.dir}"
			excludes="${src}/${version.src}"
			destdir="${build.classes}"
			optimize="true"
			debug="true"
			source="${source-version}"
			target="${target-version}"
			includeantruntime="false">
			<classpath>
				<pathelement location="${freenet-cvs-snapshot.location}"/>

				<fileset dir="lib">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</javac>
		<copy todir="${build.classes}">
			<fileset dir="src/">
				<include name="**/*.l10n" />
			</fileset>
		</copy>
	</target>

	<target name="compress" depends="compile" description="Compression target">
		<taskdef name="jarjar" 
			classname="com.tonicsystems.jarjar.JarJarTask" 
			classpath="lib/jarjar-1.0.jar"/>
		<jarjar jarfile="dist/${name}.jar">
			<manifest>
				<attribute name="Plugin-Main-Class" value="plugins.Freereader.Freereader" />
			</manifest>
			<fileset dir="${build.classes}"/>
			<fileset dir="." includes="themes/**"/>
			<zipfileset src="lib/rome-1.0.jar"/>
			<zipfileset src="lib/jdom.jar"/>
			<zipfileset src="lib/jaxen-1.1.1.jar"/>
		</jarjar>
	</target>
	
	<target name="clean" description="Cleanup old builds">
		<delete dir="${build.dir}" />
		<delete dir="${build.lib}" />
		<delete dir="${build.classes}" />
	</target>
	
	<target name="build-dep">
		<mkdir dir="${build.classes}"/>
		<mkdir dir="${build.lib}"/>
		<mkdir dir="lib/"/>
		<mkdir dir="dist"/>
	</target>
</project>
