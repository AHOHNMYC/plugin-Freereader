<?xml version="1.0" ?>
<project default="main">
	<property name="build.classes" value="bin" />
	<property name="build.lib" value="build" />
	<property name="java.dir" value="." />
	<property name="name" value="Freereader" />
	<property name="freenet-cvs-snapshot.location" location="../fred/lib/freenet-cvs-snapshot.jar"/>
	<property name="freenet-ext.location" location="../fred/lib/freenet-ext.jar"/>
	<property name="JDOM.location" location="lib/jdom.jar"/>
	<property name="JarJar.location" location="lib/jarjar-1.0.jar"/>
	<property name="Jaxen.location" location="lib/jaxen-1.1.1.jar"/>
	<property name="ROME.location" location="lib/rome-1.0.jar"/>
	<property name="tmp" location="tmp/"/>
	
	<path id="classpath">
		<pathelement location="." />
	</path>

	<target name="main" depends="compress" description="Main target">
		<echo>Building the .jar file.</echo>
	</target>

	<target name="compile" depends="build-dep" description="Compilation target">
		<javac srcdir="${java.dir}"
			destdir="${build.classes}"
			optimize="true"
			debug="true"
			source="1.5" 
			target="1.5">
			<classpath>
				<pathelement location="${freenet-ext.location}"/>
				<pathelement location="${freenet-cvs-snapshot.location}"/>

				<fileset dir="lib">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</javac>
	</target>

	<target name="compress" depends="compile" description="Compression target">
		<taskdef name="jarjar" 
			classname="com.tonicsystems.jarjar.JarJarTask" 
			classpath="lib/jarjar-1.0.jar"/>
		<jarjar jarfile="${build.lib}/${name}.jar">
			<manifest>
				<attribute name="Plugin-Main-Class" value="plugins.Freereader.Freereader" />
			</manifest>
			<fileset dir="${build.classes}"/>
			<fileset dir="." includes="themes/**"/>
			<zipfileset src="lib/rome-1.0.jar"/>
			<zipfileset src="lib/jdom.jar"/>
			<zipfileset src="lib/jaxen-1.1.1.jar"/>
		</jarjar>
	</target>
	
	<target name="clean" description="Cleanup old builds">
		<delete dir="${build.dir}" />
		<delete dir="${build.lib}" />
	</target>
	
        <target name="build-dep">
		<mkdir dir="${build.classes}"/>
		<mkdir dir="${build.lib}"/>
                <mkdir dir="lib/"/>
                <mkdir dir="${tmp}"/>
                <ant target="JDOM-get"/>
		<ant target="JarJar-get"/>
		<ant target="Jaxen-get" />
		<ant target="ROME-get" />
                <delete dir="${tmp}"/>
        </target>

	<property name="JDOM.mirror" value="http://www.jdom.org/dist/binary/jdom-1.1.1.zip" />
	<property name="JDOM.md5" value="4ea82cf93603d0b22e06df4ff6e8d94e" />
	<property name="JDOM.sha1" value="e887ce82ccc1f03991b48ba8a190b2d42b2129da" />
	<available property="JDOM.exist" classname="org.jdom.Document" classpath="${JDOM.location}" />
	<target name="JDOM-get" unless="JDOM.exist">
		<get verbose="true" src="${JDOM.mirror}" dest="${tmp}/JDOM-1.1.1.zip" />
		<checksum file="${tmp}/JDOM-1.1.1.zip" algorithm="MD5" property="${JDOM.md5}" verifyProperty="JDOMMD5ok" />
		<checksum file="${tmp}/JDOM-1.1.1.zip" algorithm="SHA1" property="${JDOM.sha1}" verifyProperty="JDOMSHA1ok" />
		<fail message="JDOM-1.1.1.zip checksum mismatch">
			<condition>
				<or>
					<equals arg1="${JDOMMD5ok}" arg2="false" />
					<equals arg1="${JDOMSHA1ok}" arg2="false" />
				</or>
			</condition>
		</fail>
		<unzip src="${tmp}/JDOM-1.1.1.zip" dest="lib/">
			<patternset>
				<include name="**/jdom.jar" />
			</patternset>
			<mapper type="flatten"/>
		</unzip>
	</target>

	<property name="JarJar.mirror" value="http://jarjar.googlecode.com/files/jarjar-1.0.jar" />
	<property name="JarJar.md5" value="2e2a08efcd4c55b0228fa0dac6d13e43" />
	<property name="JarJar.sha1" value="1d6624ccf3eca99bdbbb8c2445c1a8e70076588b" />
	<available property="JarJar.exist" classname="com.tonicsystems.jarjar.Main" classpath="${JarJar.location}" />
	<target name="JarJar-get" unless="JarJar.exist">
		<get verbose="true" src="${JarJar.mirror}" dest="${tmp}/jarjar-1.0.jar" />
		<checksum file="${tmp}/jarjar-1.0.jar" algorithm="MD5" property="${JarJar.md5}" verifyProperty="JarJarMD5ok" />
		<checksum file="${tmp}/jarjar-1.0.jar" algorithm="SHA1" property="${JarJar.sha1}" verifyProperty="JarJarSHA1ok" />
		<fail message="jarjar-1.0.jar checksum mismatch">
			<condition>
				<or>
					<equals arg1="${JarJarMD5ok}" arg2="false" />
					<equals arg1="${JarJarSHA1ok}" arg2="false" />
				</or>
			</condition>
		</fail>
		<copy file="${tmp}/jarjar-1.0.jar" tofile="${JarJar.location}" />
		<delete file="${tmp}/jarjar-1.0.jar"/>
	</target>

	<property name="Jaxen.mirror" value="http://dist.codehaus.org/jaxen/distributions/jaxen-1.1.1.zip" />
	<property name="Jaxen.md5" value="d941dc9e4c6fe6667e67562699b356f4" />
	<property name="Jaxen.sha1" value="316c96ae2ebca5ea71ecf08274e612b1868121c3" />
	<available property="Jaxen.exist" classname="org.jaxen.Context" classpath="${Jaxen.location}" />
	<target name="Jaxen-get" unless="Jaxen.exist">
		<get verbose="true" src="${Jaxen.mirror}" dest="${tmp}/jaxen-1.1.1.zip" />
		<checksum file="${tmp}/jaxen-1.1.1.zip" algorithm="MD5" property="${Jaxen.md5}" verifyProperty="JaxenMD5ok" />
		<checksum file="${tmp}/jaxen-1.1.1.zip" algorithm="SHA1" property="${Jaxen.sha1}" verifyProperty="JaxenSHA1ok" />
		<fail message="jaxen-1.1.1.zip checksum mismatch">
			<condition>
				<or>
					<equals arg1="${JaxenMD5ok}" arg2="false" />
					<equals arg1="${JaxenSHA1ok}" arg2="false" />
				</or>
			</condition>
		</fail>
		<unzip src="${tmp}/jaxen-1.1.1.zip" dest="lib/">
			<patternset>
				<include name="**/jaxen-1.1.1.jar" />
			</patternset>
			<mapper type="flatten"/>
		</unzip>
	</target>

	<property name="ROME.mirror" value="https://rome.dev.java.net/dist/rome-1.0.jar" />
	<property name="ROME.md5" value="de11767f8b3ec4947070d9c05c733dac" />
	<property name="ROME.sha1" value="681104ed3e525037272533218185afbea3e40d04" />
	<available property="ROME.exist" classname="com.sun.syndication.feed.atom.Content" classpath="${ROME.location}" />
	<target name="ROME-get" unless="ROME.exist">
		<get verbose="true" src="${ROME.mirror}" dest="${tmp}/rome-1.0.jar" />
		<checksum file="${tmp}/rome-1.0.jar" algorithm="MD5" property="${ROME.md5}" verifyProperty="ROMEMD5ok" />
		<checksum file="${tmp}/rome-1.0.jar" algorithm="SHA1" property="${ROME.sha1}" verifyProperty="ROMESHA1ok" />
		<fail message="rome-1.0.jar checksum mismatch">
			<condition>
				<or>
					<equals arg1="${ROMEMD5ok}" arg2="false" />
					<equals arg1="${ROMESHA1ok}" arg2="false" />
				</or>
			</condition>
		</fail>
		<copy file="${tmp}/rome-1.0.jar" tofile="${ROME.location}" />
		<delete file="${tmp}/rome-1.0.jar"/>
	</target>

</project>
